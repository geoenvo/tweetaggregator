# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-29 12:16
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit_autosuggest.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100, verbose_name='Keyword')),
            ],
            options={
                'ordering': ['pk'],
                'get_latest_by': 'pk',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('username', models.CharField(blank=True, max_length=50, verbose_name='User Name')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('type', models.CharField(choices=[('TWITTER', 'Twitter')], default='TWITTER', max_length=50, verbose_name='Type')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='INACTIVE', max_length=50, verbose_name='Status')),
                ('method', models.CharField(choices=[('TWEEPY', 'TWEEPY'), ('GOT', 'GOT')], default='TWEEPY', max_length=50, verbose_name='Method')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('since', models.DateField(blank=True, null=True, verbose_name='Since')),
                ('until', models.DateField(blank=True, null=True, verbose_name='Until')),
            ],
            options={
                'ordering': ['pk'],
                'get_latest_by': 'pk',
            },
        ),
        migrations.CreateModel(
            name='Twitter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet_id', models.BigIntegerField(verbose_name='Tweet ID')),
                ('tweet_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Tweet Created')),
                ('tweet_text', models.TextField(blank=True, verbose_name='Tweet Text')),
                ('user_id', models.BigIntegerField(blank=True, null=True, verbose_name='User ID')),
                ('user_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='User Name')),
                ('user_URL', models.CharField(blank=True, max_length=100, null=True, verbose_name='User URL')),
                ('user_screen_name', models.CharField(max_length=100, verbose_name='User Screen Name')),
                ('user_utc_offset', models.IntegerField(blank=True, null=True, verbose_name='User UTC Offset')),
                ('user_coordinate', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326, verbose_name='User Coordinate')),
                ('user_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='User Location')),
                ('retweets', models.IntegerField(blank=True, default=0, verbose_name='Retweets')),
                ('favorites', models.IntegerField(blank=True, default=0, verbose_name='Favorites')),
                ('keyword', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tweets', to='aggregator.Keyword', verbose_name='Keyword')),
                ('tags_tweet', taggit_autosuggest.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['pk'],
                'get_latest_by': 'pk',
            },
        ),
        migrations.AddField(
            model_name='keyword',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='aggregator.Source', verbose_name='Source'),
        ),
    ]
